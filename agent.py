"""
AI agent module for YourProformaSucks.

This module defines a single public function ``roast`` which accepts
a textual summary of a pro forma and returns a critique generated by
Google's Gemini model.  To avoid vendor lock‑in and simplify
testing, if the GEMINI_API_KEY environment variable is not set the
function will return a canned response instead of calling an API.

You can replace or augment this module to integrate with other
generative models (e.g. OpenAI GPT‑4) or to add post‑processing
behaviour.  Keep in mind that you'll need to handle rate limits,
timeouts and error handling in production.
"""

import os
from typing import Optional

try:
    import google.generativeai as genai  # type: ignore[import]
except ImportError:
    genai = None


def _init_client() -> Optional[object]:
    """Initialise and return the Gemini client if the API key is present."""
    api_key = os.environ.get("GEMINI_API_KEY")
    if not api_key or genai is None:
        return None
    genai.configure(api_key=api_key)
    return genai.GenerativeModel("gemini-pro")


def roast(summary: str) -> str:
    """Produce a critique of the given pro forma summary.

    If the Gemini API is available and configured, this function sends
    the summary to the model and returns the generated content.  If the
    API is not available, a simple placeholder critique is returned
    instead.  This fallback allows the rest of the application to work
    without an AI key during development or testing.
    """
    client = _init_client()
    if client is None:
        return (
            "[Mock critique] Thank you for submitting your pro forma. "
            "To improve it, consider adding more detail on your cost "
            "structure and adjusting your growth assumptions."
        )
    try:
        response = client.generate_content(summary)
        # The SDK returns a response object; extract the text portion
        return response.text.strip() if hasattr(response, "text") else str(response)
    except Exception as exc:  # broad except to simplify demo
        return f"[Error contacting AI] {exc}"